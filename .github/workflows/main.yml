name: GitHub Code Analyzer

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 0 * * 0' # Runs every Sunday at midnight UTC
  workflow_dispatch:

jobs:
  analyze-code:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Required to update the README
      pull-requests: read

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install cloc
        run: sudo apt-get install -y cloc

      - name: Fetch All Repositories and Analyze
        env:
          GH_PAT: ${{ secrets.GH_PAT }} # Use the Personal Access Token from secrets
        run: |
          # Get the repository owner's username
          USERNAME="${{ github.repository_owner }}"
          
          # Create necessary directories
          mkdir -p output repos
          
          # Fetch all public repository URLs (excluding forks)
          curl -s -H "Authorization: token $GH_PAT" "https://api.github.com/users/$USERNAME/repos?per_page=100" | \
          grep -o 'git_url": "[^"]*' | \
          cut -d '"' -f 4 | \
          while read url; do
            git clone "$url" "repos/$(basename "$url" .git)"
          done
          
          # Run cloc on all cloned repos and generate JSON output
          cd repos
          cloc . --exclude-ext=json,html,css,svg,md,ps1,scss --json > ../output/cloc-output.json
          
      - name: Update README.md
        run: |
          # Read the JSON output and process it to update the README
          node -e "
            const fs = require('fs');
            const clocOutput = JSON.parse(fs.readFileSync('./output/cloc-output.json', 'utf-8'));
            
            // Define language list and initialize stats
            const languages = ['JavaScript', 'TypeScript', 'JSX', 'Vue.js', 'PHP', 'C#'];
            const stats = { Other: { nFiles: 0, code: 0 } };
            languages.forEach(lang => stats[lang] = { nFiles: 0, code: 0 });
            
            // Process cloc data
            for (const lang in clocOutput) {
              if (languages.includes(lang)) {
                stats[lang] = clocOutput[lang];
              } else if (lang !== 'header' && lang !== 'SUM') {
                stats.Other.nFiles += clocOutput[lang].nFiles;
                stats.Other.code += clocOutput[lang].code;
              }
            }
            
            // Format the breakdown text
            let totalLines = 0;
            let breakdown = '[ LANGUAGES BREAKDOWN ]\n\n';
            for (const lang of [...languages, 'Other']) {
              const lines = stats[lang].code;
              totalLines += lines;
              breakdown += `${lang.padEnd(12, ' ')} --> ${lines.toLocaleString()} lines\n`;
            }
            
            breakdown += `\n[ TOTAL LINES OF CODE: ${totalLines.toLocaleString()} ]`;
            
            // Update the README file
            const readmePath = './README.md';
            let readme = fs.readFileSync(readmePath, 'utf-8');
            const startMarker = '<!-- LANGUAGES BREAKDOWN START -->';
            const endMarker = '<!-- LANGUAGES BREAKDOWN END -->';
            const newReadme = readme.substring(0, readme.indexOf(startMarker) + startMarker.length) +
                              '\\n```text\\n' + breakdown + '\\n```\\n' +
                              readme.substring(readme.indexOf(endMarker));
            fs.writeFileSync(readmePath, newReadme);
          "
          
      - name: Commit and Push Changes
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add README.md output/cloc-output.json
          git commit -m "chore: update README and cloc-output.json with latest code stats" || echo "No changes to commit"
          git push
